---

- name: build zero touch provisioning demo
  hosts:
    - all
  become: true
  vars:
    base_dir: "/home/{{ ansible_user }}/rhde-demo"
    internal_address: 192.168.200.1
    inetrnal_netmask: 24
    dhcp_range: 192.168.200.10,192.168.200.200,1h
  pre_tasks:
    - name: enforce some vars are defined
      ansible.builtin.assert:
        that:
          - external_connection is defined
          - internal_connection is defined
          - base_domain is defined
          - internal_address is defined
          - inetrnal_netmask is defined
          - dhcp_range is defined
    - name: print out demo information
      ansible.builtin.debug:
        msg: |-
          external_connection: "{{ external_connection }}"
          internal_connection: "{{ internal_connection }}"
    - name: always have 443 open
      ansible.posix.firewalld:
        port: 443/tcp
        zone: external
        permanent: true
        state: enabled
        immediate: true
  tasks:
    - name: set wan link to external zone
      community.general.nmcli:
        conn_name: "{{ external_connection }}"
        zone: external
        state: present
        dns4:
          - 8.8.8.8
          - 8.8.4.4
      notify:
        - restart_nm
    - name: add nm conn for demo
      community.general.nmcli:
        conn_name: rhde-demo-ztp
        type: ethernet
        ifname: "{{ internal_connection }}"
        ip4:
          - "{{ internal_address }}/ {{ inetrnal_netmask }}"
        dns4:
          - "{{ internal_address }}"
        dns4_search:
          - "{{ base_domain }}"
        zone: trusted
        state: present
      notify:
        - restart_nm
    - name: flush handlers for NetworkManager
      ansible.builtin.meta: flush_handlers
    - name: install dnsmasq
      ansible.builtin.dnf:
        name: dnsmasq
        state: present
    - name: template out dnsmasq conf
      ansible.builtin.template:
        src: templates/dnsmasq.conf.j2
        dest: /etc/dnsmasq.conf
      notify:
        - restart_dnsmasq
    - name: template out hosts file
      ansible.builtin.template:
        src: templates/hosts.j2
        dest: /etc/hosts
    - name: enable dnsmasq
      ansible.builtin.systemd:
        name: dnsmasq
        state: started
        enabled: true
      notify:
        - restart_dnsmasq
    - name: run rpm-ostree container
      containers.podman.podman_container:
        name: rpmostree-repo
        image: quay.io/device-edge-workshops/microshift-ostree-repo:latest
        state: started
        ports:
          - 8000:8000
      become: false
  handlers:
    - name: restart NetworkManager
      ansible.builtin.systemd:
        name: NetworkManager
        state: restarted
      listen:
        - restart_nm
    - name: wait for device to come back online
      ansible.builtin.wait_for_connection:
        timeout: 300
      listen:
        - restart_nm
    - name: wait for wifi/dns
      ansible.builtin.pause:
        seconds: 10
      listen:
        - restart_nm
    - name: restart dnsmasq
      ansible.builtin.systemd:
        name: dnsmasq
        state: restarted
      listen:
        - restart_dnsmasq
